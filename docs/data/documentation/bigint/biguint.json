{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BigUInt","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Operations on big integers never overflow, but they may take a long time to execute.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The amount of memory (and address space) available is the only constraint to the magnitude of these numbers."}]},{"type":"paragraph","inlineContent":[{"text":"This particular big integer type uses base-2^64 digits to represent integers; you can think of it as a wrapper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"around "},{"type":"codeVoice","code":"Array<UInt64>"},{"type":"text","text":". (In fact, "},{"type":"codeVoice","code":"BigUInt"},{"type":"text","text":" only uses an array if there are more than two digits.)"}]}]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/BigInt\/s18AdditiveArithmeticP","doc:\/\/BigInt\/Sz","doc:\/\/BigInt\/SL","doc:\/\/BigInt\/s8CopyableP","doc:\/\/BigInt\/s34CustomPlaygroundDisplayConvertibleP","doc:\/\/BigInt\/s23CustomStringConvertibleP","doc:\/\/BigInt\/Se","doc:\/\/BigInt\/SE","doc:\/\/BigInt\/SQ","doc:\/\/BigInt\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/BigInt\/s27ExpressibleByIntegerLiteralP","doc:\/\/BigInt\/s26ExpressibleByStringLiteralP","doc:\/\/BigInt\/s33ExpressibleByUnicodeScalarLiteralP","doc:\/\/BigInt\/SH","doc:\/\/BigInt\/Sj","doc:\/\/BigInt\/Sx","doc:\/\/BigInt\/SU"],"type":"conformsTo"}],"metadata":{"modules":[{"name":"BigInt"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"BigUInt"}],"title":"BigUInt","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BigUInt","kind":"identifier"}],"externalID":"s:6BigInt0A4UIntV","symbolKind":"struct","role":"symbol"},"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init()-sbkm","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:)-33kch","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:)-4ohlu","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:radix:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(words:)-2g41y","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(words:)-33w61"],"generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isZero","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/leadingZeroBitCount"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/decrement(shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/greatestCommonDivisor(with:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/inverse(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isPrime(rounds:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isStrongProbablePrime(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplied(by:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplied(byWord:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiply(byWord:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplyAndAdd(_:_:shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/power(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/power(_:modulus:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/serialize()","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/squareRoot()","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtract(_:shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractReportingOverflow(_:shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtracting(_:shiftedBy:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractingReportingOverflow(_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractingReportingOverflow(_:shiftedBy:)"],"generated":true,"anchor":"Instance-Methods"},{"generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subscript(bitAt:)"],"title":"Subscripts","anchor":"Subscripts"},{"anchor":"Type-Aliases","title":"Type Aliases","generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Word"]},{"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/directMultiplicationLimit"],"title":"Type Properties","anchor":"Type-Properties","generated":true},{"generated":true,"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/compare(_:_:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(lessThan:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(lessThan:using:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withExactWidth:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withExactWidth:using:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withMaximumWidth:)","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withMaximumWidth:using:)"]},{"generated":true,"identifiers":["doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/AdditiveArithmetic-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/BinaryInteger-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Comparable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/CustomPlaygroundDisplayConvertible-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/CustomStringConvertible-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Decodable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Encodable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Equatable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByStringLiteral-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByUnicodeScalarLiteral-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Hashable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Numeric-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Strideable-Implementations","doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/UnsignedInteger-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"abstract":[{"type":"text","text":"An arbitary precision unsigned integer type, also known as a “big integer”."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bigint\/biguint"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/BigInt\/documentation\/BigInt"]]},"references":{"https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm#Modular_integers":{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Extended_Euclidean_algorithm#Modular_integers","title":"multiplicative inverse of this integer in modulo modulus arithmetic","type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/Extended_Euclidean_algorithm#Modular_integers","titleInlineContent":[{"type":"text","text":"multiplicative inverse of this integer in modulo "},{"type":"codeVoice","code":"modulus"},{"type":"text","text":" arithmetic"}]},"doc://BigInt/documentation/BigInt/BigUInt/isZero":{"role":"symbol","abstract":[{"type":"text","text":"Return true iff this integer is zero."}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isZero","kind":"symbol","title":"isZero","type":"topic","url":"\/documentation\/bigint\/biguint\/iszero","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isZero","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://BigInt/documentation/BigInt/BigUInt/serialize()":{"role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/serialize()","kind":"symbol","url":"\/documentation\/bigint\/biguint\/serialize()","type":"topic","abstract":[{"type":"text","text":"Return a "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" value that contains the base-256 representation of this integer, in network (big-endian) byte order."}],"title":"serialize()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"serialize"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"}]},"doc://BigInt/documentation/BigInt/BigUInt/CustomStringConvertible-Implementations":{"url":"\/documentation\/bigint\/biguint\/customstringconvertible-implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/CustomStringConvertible-Implementations","title":"CustomStringConvertible Implementations","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(withMaximumWidth:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomInteger"},{"text":"(","kind":"text"},{"text":"withMaximumWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"}],"title":"randomInteger(withMaximumWidth:)","url":"\/documentation\/bigint\/biguint\/randominteger(withmaximumwidth:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withMaximumWidth:)","abstract":[{"text":"Create a big unsigned integer consisting of ","type":"text"},{"code":"width","type":"codeVoice"},{"type":"text","text":" uniformly distributed random bits."}]},"doc://BigInt/documentation/BigInt/BigUInt/multiplied(by:)":{"role":"symbol","abstract":[{"type":"text","text":"Multiply this integer by "},{"type":"codeVoice","code":"y"},{"text":" and return the result.","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplied(by:)","kind":"symbol","title":"multiplied(by:)","type":"topic","url":"\/documentation\/bigint\/biguint\/multiplied(by:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"multiplied"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"}]},"doc://BigInt/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral","type":"unresolvable","identifier":"doc:\/\/BigInt\/s43ExpressibleByExtendedGraphemeClusterLiteralP"},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(lessThan:)":{"role":"symbol","abstract":[{"type":"text","text":"Create a uniformly distributed random unsigned integer that’s less than the specified limit."}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(lessThan:)","kind":"symbol","title":"randomInteger(lessThan:)","type":"topic","url":"\/documentation\/bigint\/biguint\/randominteger(lessthan:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomInteger"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lessThan"},{"kind":"text","text":": "},{"text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier"}]},"doc://BigInt/documentation/BigInt/BigUInt/UnsignedInteger-Implementations":{"url":"\/documentation\/bigint\/biguint\/unsignedinteger-implementations","abstract":[],"title":"UnsignedInteger Implementations","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/UnsignedInteger-Implementations","type":"topic","role":"collectionGroup","kind":"article"},"doc://BigInt/documentation/BigInt/BigUInt/power(_:)":{"url":"\/documentation\/bigint\/biguint\/power(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"power"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/power(_:)","title":"power(_:)","abstract":[{"type":"text","text":"Returns this integer raised to the power "},{"type":"codeVoice","code":"exponent"},{"text":".","type":"text"}]},"doc://BigInt/documentation/BigInt/BigUInt/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByUnicodeScalarLiteral-Implementations","kind":"article","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"topic","url":"\/documentation\/bigint\/biguint\/expressiblebyunicodescalarliteral-implementations"},"doc://BigInt/Sx":{"title":"Swift.Strideable","type":"unresolvable","identifier":"doc:\/\/BigInt\/Sx"},"doc://BigInt/SL":{"title":"Swift.Comparable","type":"unresolvable","identifier":"doc:\/\/BigInt\/SL"},"doc://BigInt/SU":{"title":"Swift.UnsignedInteger","type":"unresolvable","identifier":"doc:\/\/BigInt\/SU"},"doc://BigInt/documentation/BigInt/BigUInt/init(words:)-33w61":{"role":"symbol","abstract":[{"text":"Initializes a new BigUInt with the specified digits. The digits are ordered from least to most significant.","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(words:)-33w61","kind":"symbol","title":"init(words:)","type":"topic","url":"\/documentation\/bigint\/biguint\/init(words:)-33w61","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"words","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"kind":"text","text":"."},{"preciseIdentifier":"s:6BigInt0A4UIntV4Worda","kind":"typeIdentifier","text":"Word"},{"kind":"text","text":"])"}]},"doc://BigInt/documentation/BigInt/BigUInt/init()-sbkm":{"url":"\/documentation\/bigint\/biguint\/init()-sbkm","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init()-sbkm","title":"init()","abstract":[{"type":"text","text":"Initializes a new BigUInt with value 0."}]},"doc://BigInt/documentation/BigInt/BigUInt/Equatable-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","type":"topic","url":"\/documentation\/bigint\/biguint\/equatable-implementations"},"doc://BigInt/documentation/BigInt/BigUInt/ExpressibleByIntegerLiteral-Implementations":{"kind":"article","url":"\/documentation\/bigint\/biguint\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByIntegerLiteral-Implementations","type":"topic","role":"collectionGroup","abstract":[]},"doc://BigInt/documentation/BigInt/BigUInt/decrement(shiftedBy:)":{"url":"\/documentation\/bigint\/biguint\/decrement(shiftedby:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decrement"},{"kind":"text","text":"("},{"text":"shiftedBy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/decrement(shiftedBy:)","title":"decrement(shiftedBy:)","abstract":[{"type":"text","text":"Decrement this integer by one."}]},"doc://BigInt/documentation/BigInt/BigUInt/CustomPlaygroundDisplayConvertible-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/CustomPlaygroundDisplayConvertible-Implementations","kind":"article","title":"CustomPlaygroundDisplayConvertible Implementations","type":"topic","url":"\/documentation\/bigint\/biguint\/customplaygrounddisplayconvertible-implementations"},"doc://BigInt/documentation/BigInt/BigUInt/directMultiplicationLimit":{"url":"\/documentation\/bigint\/biguint\/directmultiplicationlimit","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"directMultiplicationLimit"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/directMultiplicationLimit","title":"directMultiplicationLimit","abstract":[{"type":"text","text":"Multiplication switches to an asymptotically better recursive algorithm when arguments have more words than this limit."}]},"doc://BigInt/documentation/BigInt/BigUInt/Hashable-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Hashable-Implementations","kind":"article","title":"Hashable Implementations","type":"topic","url":"\/documentation\/bigint\/biguint\/hashable-implementations"},"doc://BigInt/documentation/BigInt/BigUInt/inverse(_:)":{"title":"inverse(_:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/bigint\/biguint\/inverse(_:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/inverse(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"inverse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Extended_Euclidean_algorithm#Modular_integers"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there is no such number."}]},"doc://BigInt/documentation/BigInt/BigUInt/isStrongProbablePrime(_:)":{"abstract":[{"type":"text","text":"Returns true iff this integer passes the "},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Probable_prime","isActive":true,"type":"reference"},{"text":" for the specified base.","type":"text"}],"url":"\/documentation\/bigint\/biguint\/isstrongprobableprime(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isStrongProbablePrime"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","role":"symbol","type":"topic","title":"isStrongProbablePrime(_:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isStrongProbablePrime(_:)"},"doc://BigInt/s18AdditiveArithmeticP":{"type":"unresolvable","title":"Swift.AdditiveArithmetic","identifier":"doc:\/\/BigInt\/s18AdditiveArithmeticP"},"doc://BigInt/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/BigInt\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://BigInt/SQ":{"type":"unresolvable","identifier":"doc:\/\/BigInt\/SQ","title":"Swift.Equatable"},"doc://BigInt/documentation/BigInt/BigUInt/Strideable-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Strideable-Implementations","kind":"article","title":"Strideable Implementations","type":"topic","url":"\/documentation\/bigint\/biguint\/strideable-implementations"},"doc://BigInt/documentation/BigInt/BigUInt/multiplyAndAdd(_:_:shiftedBy:)":{"url":"\/documentation\/bigint\/biguint\/multiplyandadd(_:_:shiftedby:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"multiplyAndAdd"},{"kind":"text","text":"("},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"},{"text":".","kind":"text"},{"text":"Word","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV4Worda"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"shiftedBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplyAndAdd(_:_:shiftedBy:)","title":"multiplyAndAdd(_:_:shiftedBy:)","abstract":[{"type":"text","text":"Multiply "},{"type":"codeVoice","code":"x"},{"type":"text","text":" by "},{"type":"codeVoice","code":"y"},{"text":", and add the result to this integer, optionally shifted ","type":"text"},{"type":"codeVoice","code":"shift"},{"type":"text","text":" words to the left."}]},"doc://BigInt/Se":{"type":"unresolvable","identifier":"doc:\/\/BigInt\/Se","title":"Swift.Decodable"},"doc://BigInt/s33ExpressibleByUnicodeScalarLiteralP":{"type":"unresolvable","identifier":"doc:\/\/BigInt\/s33ExpressibleByUnicodeScalarLiteralP","title":"Swift.ExpressibleByUnicodeScalarLiteral"},"doc://BigInt/documentation/BigInt/BigUInt/Decodable-Implementations":{"role":"collectionGroup","type":"topic","title":"Decodable Implementations","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Decodable-Implementations","abstract":[],"url":"\/documentation\/bigint\/biguint\/decodable-implementations","kind":"article"},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(withExactWidth:)":{"role":"symbol","abstract":[{"type":"text","text":"Create a big unsigned integer consisting of "},{"type":"codeVoice","code":"width-1"},{"text":" uniformly distributed random bits followed by a one bit.","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withExactWidth:)","kind":"symbol","title":"randomInteger(withExactWidth:)","type":"topic","url":"\/documentation\/bigint\/biguint\/randominteger(withexactwidth:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"randomInteger","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withExactWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"}]},"doc://BigInt/documentation/BigInt/BigUInt/multiply(byWord:)":{"url":"\/documentation\/bigint\/biguint\/multiply(byword:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"multiply"},{"kind":"text","text":"("},{"text":"byWord","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV4Worda","text":"Word"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiply(byWord:)","title":"multiply(byWord:)","abstract":[{"type":"text","text":"Multiply this big integer by a single word, and store the result in place of the original big integer."}]},"doc://BigInt/documentation/BigInt/BigUInt/subtracting(_:shiftedBy:)":{"role":"symbol","abstract":[{"type":"text","text":"Subtract "},{"type":"codeVoice","code":"b"},{"type":"text","text":" from this integer, and return the difference."},{"type":"text","text":" "},{"type":"codeVoice","code":"b"},{"text":" is shifted ","type":"text"},{"code":"shift","type":"codeVoice"},{"text":" digits to the left before being subtracted.","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtracting(_:shiftedBy:)","kind":"symbol","title":"subtracting(_:shiftedBy:)","type":"topic","url":"\/documentation\/bigint\/biguint\/subtracting(_:shiftedby:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"subtracting","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shiftedBy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV"}]},"doc://BigInt/documentation/BigInt/BigUInt/isPrime(rounds:)":{"url":"\/documentation\/bigint\/biguint\/isprime(rounds:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isPrime"},{"text":"(","kind":"text"},{"text":"rounds","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/isPrime(rounds:)","title":"isPrime(rounds:)","abstract":[{"type":"text","text":"Returns true if this integer is probably prime. Returns false if this integer is definitely not prime."}]},"doc://BigInt/documentation/BigInt/BigUInt/Encodable-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Encodable-Implementations","url":"\/documentation\/bigint\/biguint\/encodable-implementations","title":"Encodable Implementations","type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/Word":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Word","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Word","kind":"identifier"}],"kind":"symbol","title":"BigUInt.Word","url":"\/documentation\/bigint\/biguint\/word","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Word","abstract":[{"type":"text","text":"The type representing a digit in "},{"code":"BigUInt","type":"codeVoice"},{"type":"text","text":"’s underlying number system."}],"type":"topic"},"https://en.wikipedia.org/wiki/Probable_prime":{"url":"https:\/\/en.wikipedia.org\/wiki\/Probable_prime","title":"strong probable prime test","titleInlineContent":[{"text":"strong probable prime test","type":"text"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/Probable_prime"},"doc://BigInt/s8CopyableP":{"identifier":"doc:\/\/BigInt\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/leadingZeroBitCount":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/leadingZeroBitCount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leadingZeroBitCount","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"leadingZeroBitCount","url":"\/documentation\/bigint\/biguint\/leadingzerobitcount","abstract":[{"text":"The number of leading zero bits in the binary representation of this integer in base ","type":"text"},{"code":"2^(Word.bitWidth)","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"This is useful when you need to normalize a ","type":"text"},{"code":"BigUInt","type":"codeVoice"},{"text":" such that the top bit of its most significant word is 1.","type":"text"}]},"doc://BigInt/s27ExpressibleByIntegerLiteralP":{"identifier":"doc:\/\/BigInt\/s27ExpressibleByIntegerLiteralP","title":"Swift.ExpressibleByIntegerLiteral","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/compare(_:_:)":{"kind":"symbol","title":"compare(_:_:)","abstract":[{"text":"Compare ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"b"},{"text":" and return an ","type":"text"},{"code":"NSComparisonResult","type":"codeVoice"},{"text":" indicating their order.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"compare","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"},{"text":") -> ","kind":"text"},{"text":"ComparisonResult","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSComparisonResult"}],"role":"symbol","url":"\/documentation\/bigint\/biguint\/compare(_:_:)","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/compare(_:_:)"},"doc://BigInt/documentation/BigInt/BigUInt/AdditiveArithmetic-Implementations":{"url":"\/documentation\/bigint\/biguint\/additivearithmetic-implementations","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/AdditiveArithmetic-Implementations","title":"AdditiveArithmetic Implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article"},"doc://BigInt/s26ExpressibleByStringLiteralP":{"identifier":"doc:\/\/BigInt\/s26ExpressibleByStringLiteralP","title":"Swift.ExpressibleByStringLiteral","type":"unresolvable"},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(withMaximumWidth:using:)":{"title":"randomInteger(withMaximumWidth:using:)","url":"\/documentation\/bigint\/biguint\/randominteger(withmaximumwidth:using:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withMaximumWidth:using:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"randomInteger"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"RNG"},{"kind":"text","text":">("},{"kind":"externalParam","text":"withMaximumWidth"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RNG"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV"}],"abstract":[{"text":"Create a big unsigned integer consisting of ","type":"text"},{"type":"codeVoice","code":"width"},{"type":"text","text":" uniformly distributed random bits."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/multiplied(byWord:)":{"role":"symbol","abstract":[{"type":"text","text":"Multiply this big integer by a single Word, and return the result."}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/multiplied(byWord:)","kind":"symbol","title":"multiplied(byWord:)","type":"topic","url":"\/documentation\/bigint\/biguint\/multiplied(byword:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"multiplied"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"byWord"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV4Worda","text":"Word"},{"kind":"text","text":") -> "},{"text":"BigUInt","kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV"}]},"doc://BigInt/documentation/BigInt/BigUInt/squareRoot()":{"title":"squareRoot()","url":"\/documentation\/bigint\/biguint\/squareroot()","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/squareRoot()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"squareRoot","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the integer square root of a big integer; i.e., the largest integer whose square isn’t greater than ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://BigInt/Sj":{"type":"unresolvable","title":"Swift.Numeric","identifier":"doc:\/\/BigInt\/Sj"},"doc://BigInt/documentation/BigInt":{"url":"\/documentation\/bigint","type":"topic","title":"BigInt","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/BigInt\/documentation\/BigInt"},"doc://BigInt/documentation/BigInt/BigUInt/subtractingReportingOverflow(_:)":{"title":"subtractingReportingOverflow(_:)","url":"\/documentation\/bigint\/biguint\/subtractingreportingoverflow(_:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractingReportingOverflow(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtractingReportingOverflow"},{"kind":"text","text":"("},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"kind":"text","text":") -> (partialValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"kind":"text","text":", overflow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Subtracts "},{"type":"codeVoice","code":"other"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":", returning the result and a flag indicating arithmetic overflow."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/subscript(bitAt:)":{"role":"symbol","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subscript(bitAt:)","kind":"symbol","title":"subscript(bitAt:)","type":"topic","url":"\/documentation\/bigint\/biguint\/subscript(bitat:)","fragments":[{"kind":"keyword","text":"subscript"},{"text":"(","kind":"text"},{"text":"bitAt","kind":"externalParam"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://BigInt/documentation/BigInt/BigUInt/subtractReportingOverflow(_:shiftedBy:)":{"title":"subtractReportingOverflow(_:shiftedBy:)","url":"\/documentation\/bigint\/biguint\/subtractreportingoverflow(_:shiftedby:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractReportingOverflow(_:shiftedBy:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subtractReportingOverflow"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shiftedBy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Subtract "},{"type":"codeVoice","code":"other"},{"type":"text","text":" from this integer in place, and return a flag indicating if the operation caused an"},{"type":"text","text":" "},{"text":"arithmetic overflow. ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":" is shifted "},{"code":"shift","type":"codeVoice"},{"text":" digits to the left before being subtracted.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/init(_:)-33kch":{"abstract":[{"text":"Initialize a BigInt from bytes accessed from an UnsafeRawBufferPointer","type":"text"}],"title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","text":"UnsafeRawBufferPointer"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/bigint\/biguint\/init(_:)-33kch","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:)-33kch","role":"symbol","kind":"symbol"},"doc://BigInt/documentation/BigInt/BigUInt/Numeric-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/bigint\/biguint\/numeric-implementations","title":"Numeric Implementations","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Numeric-Implementations"},"doc://BigInt/documentation/BigInt/BigUInt/init(_:)-4ohlu":{"role":"symbol","abstract":[{"text":"Initializes an integer from the bits stored inside a piece of ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"The data is assumed to be in network (big-endian) byte order.","type":"text"}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:)-4ohlu","kind":"symbol","title":"init(_:)","type":"topic","url":"\/documentation\/bigint\/biguint\/init(_:)-4ohlu","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://BigInt/documentation/BigInt/BigUInt/ExpressibleByStringLiteral-Implementations":{"title":"ExpressibleByStringLiteral Implementations","url":"\/documentation\/bigint\/biguint\/expressiblebystringliteral-implementations","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByStringLiteral-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic"},"doc://BigInt/SE":{"identifier":"doc:\/\/BigInt\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://BigInt/documentation/BigInt/BigUInt/BinaryInteger-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/BinaryInteger-Implementations","abstract":[],"kind":"article","title":"BinaryInteger Implementations","url":"\/documentation\/bigint\/biguint\/binaryinteger-implementations"},"doc://BigInt/SH":{"identifier":"doc:\/\/BigInt\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://BigInt/documentation/BigInt/BigUInt":{"title":"BigUInt","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt","kind":"symbol","url":"\/documentation\/bigint\/biguint","type":"topic","role":"symbol","abstract":[{"text":"An arbitary precision unsigned integer type, also known as a “big integer”.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BigUInt","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BigUInt"}]},"doc://BigInt/s34CustomPlaygroundDisplayConvertibleP":{"identifier":"doc:\/\/BigInt\/s34CustomPlaygroundDisplayConvertibleP","type":"unresolvable","title":"Swift.CustomPlaygroundDisplayConvertible"},"doc://BigInt/documentation/BigInt/BigUInt/greatestCommonDivisor(with:)":{"title":"greatestCommonDivisor(with:)","url":"\/documentation\/bigint\/biguint\/greatestcommondivisor(with:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/greatestCommonDivisor(with:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"greatestCommonDivisor"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"}],"abstract":[{"type":"text","text":"Returns the greatest common divisor of "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/subtractingReportingOverflow(_:shiftedBy:)":{"role":"symbol","abstract":[{"text":"Subtract ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":" from this integer, returning the difference and a flag indicating arithmetic overflow."},{"type":"text","text":" "},{"code":"other","type":"codeVoice"},{"type":"text","text":" is shifted "},{"type":"codeVoice","code":"shift"},{"type":"text","text":" digits to the left before being subtracted."}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtractingReportingOverflow(_:shiftedBy:)","kind":"symbol","title":"subtractingReportingOverflow(_:shiftedBy:)","type":"topic","url":"\/documentation\/bigint\/biguint\/subtractingreportingoverflow(_:shiftedby:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subtractingReportingOverflow"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"shiftedBy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> (partialValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"text":", overflow","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://BigInt/Sz":{"type":"unresolvable","identifier":"doc:\/\/BigInt\/Sz","title":"Swift.BinaryInteger"},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(withExactWidth:using:)":{"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(withExactWidth:using:)","role":"symbol","title":"randomInteger(withExactWidth:using:)","type":"topic","abstract":[{"text":"Create a big unsigned integer consisting of ","type":"text"},{"type":"codeVoice","code":"width-1"},{"type":"text","text":" uniformly distributed random bits followed by a one bit."}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomInteger"},{"kind":"text","text":"<"},{"text":"RNG","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"withExactWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RNG","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"}],"url":"\/documentation\/bigint\/biguint\/randominteger(withexactwidth:using:)"},"doc://BigInt/documentation/BigInt/BigUInt/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","kind":"article","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"topic","url":"\/documentation\/bigint\/biguint\/expressiblebyextendedgraphemeclusterliteral-implementations"},"doc://BigInt/documentation/BigInt/BigUInt/init(_:radix:)":{"title":"init(_:radix:)","url":"\/documentation\/bigint\/biguint\/init(_:radix:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(_:radix:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"radix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initialize a big integer from an ASCII representation in a given radix. Numerals above "},{"code":"9","type":"codeVoice"},{"text":" are represented by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"letters from the English alphabet."}],"kind":"symbol","role":"symbol","type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/init(words:)-2g41y":{"kind":"symbol","url":"\/documentation\/bigint\/biguint\/init(words:)-2g41y","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Words","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"words"},{"text":": ","kind":"text"},{"text":"Words","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/init(words:)-2g41y","role":"symbol","title":"init(words:)"},"doc://BigInt/documentation/BigInt/BigUInt/randomInteger(lessThan:using:)":{"role":"symbol","abstract":[{"type":"text","text":"Create a uniformly distributed random unsigned integer that’s less than the specified limit."}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/randomInteger(lessThan:using:)","kind":"symbol","title":"randomInteger(lessThan:using:)","type":"topic","url":"\/documentation\/bigint\/biguint\/randominteger(lessthan:using:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"randomInteger","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RNG"},{"kind":"text","text":">("},{"text":"lessThan","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"RNG","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt"}]},"doc://BigInt/documentation/BigInt/BigUInt/subtract(_:shiftedBy:)":{"title":"subtract(_:shiftedBy:)","url":"\/documentation\/bigint\/biguint\/subtract(_:shiftedby:)","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/subtract(_:shiftedBy:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"subtract","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"},{"kind":"text","text":", "},{"text":"shiftedBy","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Subtract "},{"type":"codeVoice","code":"other"},{"type":"text","text":" from this integer in place."},{"type":"text","text":" "},{"code":"other","type":"codeVoice"},{"type":"text","text":" is shifted "},{"type":"codeVoice","code":"shift"},{"text":" digits to the left before being subtracted.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://BigInt/documentation/BigInt/BigUInt/power(_:modulus:)":{"role":"symbol","abstract":[{"text":"Returns the remainder of this integer raised to the power ","type":"text"},{"type":"codeVoice","code":"exponent"},{"type":"text","text":" in modulo arithmetic under "},{"code":"modulus","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/power(_:modulus:)","kind":"symbol","title":"power(_:modulus:)","type":"topic","url":"\/documentation\/bigint\/biguint\/power(_:modulus:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"power"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:6BigInt0A4UIntV","text":"BigUInt","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"modulus","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier","text":"BigUInt"},{"kind":"text","text":") -> "},{"text":"BigUInt","preciseIdentifier":"s:6BigInt0A4UIntV","kind":"typeIdentifier"}]},"doc://BigInt/documentation/BigInt/BigUInt/Comparable-Implementations":{"url":"\/documentation\/bigint\/biguint\/comparable-implementations","abstract":[],"title":"Comparable Implementations","type":"topic","identifier":"doc:\/\/BigInt\/documentation\/BigInt\/BigUInt\/Comparable-Implementations","kind":"article","role":"collectionGroup"}}}